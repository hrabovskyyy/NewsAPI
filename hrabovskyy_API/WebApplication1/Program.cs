using NewsManagerAPI.Models;
using NewsManagerAPI.Services;

var builder = WebApplication.CreateBuilder(args);

// üîê –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∫–ª—é—á–∞ API –∑ appsettings.json -> NewsApiOptions
builder.Services.Configure<NewsApiOptions>(
    builder.Configuration.GetSection("NewsApi")
);

// üì° HTTP-–∫–ª—ñ—î–Ω—Ç + DI —Å–µ—Ä–≤—ñ—Å—É –∑ —ñ–Ω–∂–µ–∫—Ü—ñ—î—é –∫–ª—é—á–∞
builder.Services.AddHttpClient<INewsService, NewsService>();

// üì¶ –ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∏ + Swagger
builder.Services.AddControllers();
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

// üåê CORS –¥–ª—è –±–æ—Ç–∞ –∞–±–æ —Ñ—Ä–æ–Ω—Ç—É
builder.Services.AddCors(options =>
{
    options.AddDefaultPolicy(policy =>
    {
        policy.AllowAnyOrigin()
              .AllowAnyHeader()
              .AllowAnyMethod();
    });
});

var app = builder.Build();

// üß™ Swagger –ª–∏—à–µ –¥–ª—è –¥–µ–≤–µ–ª–æ–ø–º–µ–Ω—Ç—É
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseHttpsRedirection();
app.UseCors();
app.UseAuthorization();
app.MapControllers();
app.Run();